---
########################################################################
#                                  BLE                                 #
########################################################################
- name: ble_tag_monitor | apt install
  apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
  with_items:
    - libbluetooth3
    - bluez # for hciconfig (also in blobs) TODO get rid of this
    - python-bluez
  sudo_user: root
- name: install the lescan tool
  copy: src=lescan.py dest=/usr/local/bin/lescan
      owner=root group=root mode=0755
  sudo_user: root

########################################################################
#                                 ZWAVE                                #
########################################################################
- name: install open-zwave/MinOZW
  command: cp {{ blobs }}/open-zwave/MinOZW-v1.3 /usr/local/bin/MinOZW-v1.3
      creates=/usr/local/bin/MinOZW-v1.3
  sudo_user: root
  # register: minozw
- name: remove the old MinOZW
  file: path=/usr/local/bin/MinOZW state=absent
  sudo_user: root
  # when: minozw.changed
- name: update the link to MinOZW
  file: path=/usr/local/bin/MinOZW state=link
      src=/usr/local/bin/MinOZW-v1.3
  sudo_user: root
  # when: minozw.changed
- name: install open-zwave/config -> /etc/zwave/
  command: cp -r {{ blobs }}/open-zwave/config /etc/zwave
      creates=/etc/zwave
  # Note: this will not update /etc/zwave/ if changed
  sudo_user: root
- name: mkdir /var/zwave/
  file: path=/var/zwave/ state=directory
  sudo_user: root

########################################################################
#                                GENERIC                               #
########################################################################
- name: mkdir ~/drivers_ENVs
  file: path={{ home }}/drivers_ENVs state=directory

- name: extract the drivers names
  shell: >
      {{ app }}/config.py | jq --raw-output '.loaded_drivers|.[]'
  register: driver_names

- name: create the drivers virtualenvs and install drivers requirements.txt
  pip: virtualenv={{ home }}/drivers_ENVs/{{ item }}
      requirements={{ drivers }}/drivers/{{ item }}/requirements.txt
      extra_args="--no-index --use-wheel --find-links={{ drivers }}/wheelhouse"
  with_items: driver_names.stdout_lines
  ignore_errors: True

# TODO: delete the virtualenvs not in use
